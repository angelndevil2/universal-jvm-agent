ext {
    majorVersion = '0'
    minorVersion = '0'
    fixVersion = '3'
}

group 'com.github.angelndevil2'
version majorVersion+'.'+minorVersion+'.'+fixVersion

apply plugin: 'java'
apply plugin: 'application'

/**
 * dynamic agent loading supported >= 1.6
 */
sourceCompatibility = 1.6
mainClassName ='com.github.angelndevil2.universaljvmagent.Launcher'

repositories {
    mavenCentral()
}

startScripts {
    classpath = files("*")
}

configurations {
    /**
     * exclude from runtime, tar, zip
     */
    runtime.exclude('module':'lombok')
    runtime.exclude('module':'management-api')
}

dependencies {
    /**
     * for command line option handling
     */
    compile 'commons-cli:commons-cli:1.3.1'
    /**
     * for logger - logback
     */
    compile 'ch.qos.logback:logback-classic:1.1.3'
    /**
     * for shell command handling
     */
    compile group:'org.apache.commons', name: 'commons-exec', version: '1.3'
    compile files("tools.jar")
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'com.google.guava:guava:19.0'
    compile 'org.eclipse.jetty:jetty-server:8.1.18.v20150929'
    compile 'org.eclipse.jetty:jetty-servlet:8.1.18.v20150929'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.6'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.github.angelndevil2:xii4j:0.0.2'


    compile 'org.slf4j:jcl-over-slf4j:1.7.16'
    compile 'org.slf4j:log4j-over-slf4j:1.7.16'



    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar {
    manifest {

        attributes('Implementation-Title':'com.github.angelndevil2'+"."+module.name,
                'Implementation-Version': version,
                'Created-By': 'angelndevil2',
                'Premain-Class': 'com.github.angelndevil2.universaljvmagent.Bootstrap',
                'Agent-Class': 'com.github.angelndevil2.universaljvmagent.Bootstrap',
                'Main-Class': 'com.github.angelndevil2.universaljvmagent.Launcher',
                //'Boot-Class-Path': 'universal-jvm-agent'+"-"+version+".jar"
                //'Class-Path': 'universal-jvm-agent'+"-"+version+".jar"
                //'Boot-Class-Path':configurations.runtime.files.collect { "$it.name" }.join(' ').replace("tools.jar ", "").replace("tools.jar","")
        )
    }

    //exclude "com/github/angelndevil2/universaljvmagent/Bootstrap.class"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

/**
 * use for boot strap jar
 */
task bootStrapJar(type:Jar, dependsOn:compileJava) {
    classifier = "bootstrap"
    manifest {
        attributes(
                'Implementation-Version': version,
                'Created-By': 'angelndevil2',
                'Premain-Class': 'com.github.angelndevil2.universaljvmagent.Bootstrap',
                'Agent-Class': 'com.github.angelndevil2.universaljvmagent.Bootstrap',
                'Boot-Class-Path': 'universal-jvm-agent'+"-"+version+"-bootstrap.jar",
                "Assembly-Date": new java.util.Date().toString()
        )
    }
    from (sourceSets.main.output) {
        include "com/github/angelndevil2/universaljvmagent/Bootstrap.class"
    }
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

distZip {
    /**
     * exclude from zip and use start up jvm option -Xbootclasspath/a:<path_to_jdk>/lib/tools.jar
     */
    exclude 'tools.jar'
    //include 'universal-jvm-agent-'+version+"-bootstrap.jar"
    dependsOn bootStrapJar
}

distTar {
    /**
     * exclude from tar and use start up jvm option -Xbootclasspath/a:<path_to_jdk>/lib/tools.jar
     */
    exclude 'tools.jar'
}

distributions {
    main {
        contents {
            from(bootStrapJar) {
                into "lib"
            }
        }
    }
}
//apply from: 'maven-push.gradle'